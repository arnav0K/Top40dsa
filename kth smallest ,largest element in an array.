#include <iostream>
#include <vector>
#include <queue>
using namespace std;

int findKthSmallestHeap(vector<int>& arr, int k) {
    priority_queue<int> maxHeap; // Max-heap

    for (int num : arr) {
        maxHeap.push(num);
        if (maxHeap.size() > k) {
            maxHeap.pop(); // Keep only k elements
        }
    }

    return maxHeap.top(); // Top of the heap is the kth smallest
}

int findKthLargestHeap(vector<int>& arr, int k) {
    priority_queue<int, vector<int>, greater<int>> minHeap; // Min-heap

    for (int num : arr) {
        minHeap.push(num);
        if (minHeap.size() > k) {
            minHeap.pop(); // Keep only k elements
        }
    }

    return minHeap.top(); // Top of the heap is the kth largest
}

int main() {
    vector<int> arr = {7, 10, 4, 3, 20, 15};
    int k = 3;

    cout << "Kth smallest element (heap): " << findKthSmallestHeap(arr, k) << endl; // Output: 7
    cout << "Kth largest element (heap): " << findKthLargestHeap(arr, k) << endl;   // Output: 10

    return 0;
}
