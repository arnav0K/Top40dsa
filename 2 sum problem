#include <iostream>
#include <vector>
#include <algorithm> // for sort
using namespace std;

vector<int> twoSum(vector<int>& nums, int target) {
    vector<pair<int, int>> indexed_nums; // To store the original indices along with values
    for (int i = 0; i < nums.size(); i++) {
        indexed_nums.push_back({nums[i], i});
    }
    
    // Sort the array based on values
    sort(indexed_nums.begin(), indexed_nums.end());

    int left = 0, right = indexed_nums.size() - 1;
    
    while (left < right) {
        int sum = indexed_nums[left].first + indexed_nums[right].first;
        
        if (sum == target) {
            // Return the original indices
            return {indexed_nums[left].second, indexed_nums[right].second};
        }
        else if (sum < target) {
            left++;
        } else {
            right--;
        }
    }
    
    return {}; // If no solution is found
}

int main() {
    vector<int> nums = {2, 7, 11, 15};
    int target = 9;
    
    vector<int> result = twoSum(nums, target);
    
    if (!result.empty()) {
        cout << "Indices of the two numbers are: " << result[0] << " and " << result[1] << endl;
    } else {
        cout << "No solution found" << endl;
    }

    return 0;
}
